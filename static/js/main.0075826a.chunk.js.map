{"version":3,"sources":["firebase/firebase.js","redux/actions/auth.js","constants/action-types.js","components/Navigation/Navigation.js","constants/routes.js","redux/actions/notify.js","components/Notify/Notify.js","components/LandingPage/LandingPage.js","redux/selectors.js","components/NoteList/CheckItem.js","redux/actions/noteList.js","components/NoteList/Note.js","components/NoteList/NoteList.js","redux/actions/addNoteForm.js","components/AddNoteForm/CheckItem.js","components/AddNoteForm/AddNoteForm.js","components/HomePage/HomePage.js","components/SignInPage/SignInPage.js","components/SignUpPage/SignUpPage.js","components/App/App.js","serviceWorker.js","redux/reducers/addNoteForm.js","redux/reducers/noteList.js","redux/reducers/auth.js","redux/reducers/notify.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firebaseAuth","auth","signOut","dispatch","then","type","Navigation","className","to","id","this","props","authenticated","onClick","Component","connect","state","notifyOn","content","Notify","isShow","onDismiss","notifyOff","timeout","notify","LandingPage","getNoteList","noteList","getNoteIds","Object","keys","getNoteById","getCheckItemById","noteId","checkList","CheckItem","handleEditCheckItemIsComplete","event","checked","target","editCheckItem","checkItemId","name","value","handleEditCheckItemContent","isEdit","checkItem","defaultChecked","isComplete","onChange","changeCompleteState","htmlFor","defaultValue","ownProps","payload","ref","currentUser","uid","update","Note","handleDeleteNote","deleteNote","handleEditNote","editNote","handleUpdateNote","updateNote","note","setState","hasOwnProperty","role","title","data-toggle","data-parent","href","aria-expanded","map","key","remove","NoteList","aria-multiselectable","on","data","val","addCheckItem","changeCompleteStatus","handleAddCheckItem","AddNoteForm","handleChange","updateNoteForm","handleAddNote","length","addNote","isCheckListEmpty","some","entries","placeholder","disabled","addNoteForm","push","catch","error","console","log","HomePage","SignInPage","initialValues","email","password","onSubmit","values","signIn","validationSchema","Yup","shape","required","min","touched","errors","handleBlur","handleSubmit","style","maxWidth","top","onBlur","user","signInWithEmailAndPassword","SignUpPage","confirmPassword","signUp","test","parent","createUserWithEmailAndPassword","particlesOptions","App","params","exact","path","component","Boolean","window","location","hostname","match","initialState","isPending","rootReducer","combineReducers","action","noteList2","noteId2","store","createStore","applyMiddleware","thunkMiddleware","onAuthStateChanged","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0075826a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth'; \r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCL1LOhpt_hpfhUgTKCCD_ZGtQ7REyH5y8\",\r\n  authDomain: \"todo-app-45efc.firebaseapp.com\",\r\n  databaseURL: \"https://todo-app-45efc.firebaseio.com\",\r\n  projectId: \"todo-app-45efc\",\r\n  storageBucket: \"todo-app-45efc.appspot.com\",\r\n  messagingSenderId: \"985853056496\",\r\n  appId: \"1:985853056496:web:b87eba3276d80df8d27935\",\r\n  measurementId: \"G-B7ZJ3DKH3Z\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const database = firebase.database();\r\nexport const firebaseAuth = firebase.auth();","import { \r\n  AUTH_SUCCESS,\r\n  AUTH_ERROR,\r\n  SIGN_OUT\r\n} from '../../constants/action-types';\r\nimport { firebaseAuth } from '../../firebase/firebase';\r\n\r\nexport const signUp = (user) => {\r\n  return (dispatch) => {\r\n    firebaseAuth.createUserWithEmailAndPassword(user.email, user.password)\r\n      .then(() => dispatch({ type: AUTH_SUCCESS }))\r\n      .catch(() => dispatch({ type: AUTH_ERROR }));\r\n  }\r\n};\r\n\r\nexport const signIn = (user) => {\r\n  return (dispatch) => {\r\n    firebaseAuth.signInWithEmailAndPassword(user.email, user.password)\r\n      .then(() => dispatch({ type: AUTH_SUCCESS }))\r\n      .catch(() => dispatch({ type: AUTH_ERROR }));\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch) => {\r\n    firebaseAuth.signOut()\r\n    .then(() => dispatch({ type: SIGN_OUT }));\r\n  }\r\n};\r\n\r\nexport const verifyAuth = () => {\r\n  return (dispatch) => {\r\n    firebaseAuth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        dispatch({ type: AUTH_SUCCESS });\r\n      } else {\r\n        dispatch(signOut());\r\n      }\r\n    });\r\n  }\r\n};","export const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const SIGN_OUT ='SIGN_OUT';\r\n\r\nexport const UPDATE_NOTE_FORM = 'UPDATE_NOTE_FORM';\r\nexport const ADD_CHECK_ITEM = 'ADD_CHECK_ITEM';\r\nexport const ADD_NOTE_SUCCESS = 'ADD_NOTE_SUCCESS';\r\n\r\nexport const GET_NOTE_LIST_PENDING = 'GET_NOTE_LIST_PENDING';\r\nexport const GET_NOTE_LIST_SUCCESS = 'GET_NOTE_LIST_SUCCESS';\r\nexport const CHANGE_COMPLETE_STATE = 'CHANGE_COMPLETE_STATE';\r\nexport const DELETE_NOTE = 'DELETE_NOTE';\r\nexport const EDIT_NOTE = 'EDIT_NOTE';\r\nexport const EDIT_CHECK_ITEM = 'EDIT_CHECK_ITEM';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\r\n\r\nexport const NOTIFY_ON = 'NOTIFY_ON';\r\nexport const NOTIFY_OFF = 'NOTIFY_OFF';","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../redux/actions/auth';\r\n\r\nexport class Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n        <Link to={ROUTES.HOME} className=\"navbar-brand\">TODO</Link>\r\n        <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavId\">\r\n          <ul className=\"navbar-nav mt-2 mt-lg-0\">\r\n            {this.props.authenticated\r\n              ? <li className=\"nav-item active\" onClick={this.props.signOut}>\r\n                  <Link to={ROUTES.LANDING} className=\"nav-link\">Sign out</Link>\r\n                </li>\r\n              : <Fragment>\r\n                <li className=\"nav-item active\">\r\n                  <Link to={ROUTES.SIGN_IN} className=\"nav-link\">Sign in</Link>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                  <Link to={ROUTES.SIGN_UP} className=\"nav-link\">Sign up</Link>\r\n                </li>\r\n              </Fragment>\r\n            }\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authenticated: state.auth.authenticated\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\r\n","export const LANDING = '/todo-app';\r\nexport const HOME = '/home';\r\nexport const SIGN_IN = '/signin';\r\nexport const SIGN_UP = '/signup';\r\n","import {\r\n  NOTIFY_ON,\r\n  NOTIFY_OFF\r\n} from '../../constants/action-types';\r\n\r\nexport const notifyOn = (content) => ({\r\n  type: NOTIFY_ON,\r\n  content: content\r\n});\r\n\r\nexport const notifyOff = () => ({\r\n  type: NOTIFY_OFF\r\n});","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { notifyOff } from '../../redux/actions/notify';\r\nimport { Alert, AlertContainer } from \"react-bs-notifier\";\r\n\r\nclass Notify extends Component {\r\n  render() {\r\n    if (!this.props.isShow) return null;\r\n\r\n    return (\r\n      <AlertContainer>\r\n        <Alert type=\"success\" onDismiss={this.props.notifyOff} timeout={1000}>\r\n          {this.props.content}\r\n        </Alert>\r\n      </AlertContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isShow: state.notify.isShow,\r\n    content: state.notify.content\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    notifyOff: () => dispatch(notifyOff())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notify);","import React, { Component } from 'react';\r\nimport './LandingPage.css';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"LandingPage text-center\">\r\n        <div className=\"bg-image\"></div>\r\n        <div className=\"bg-text p-5\">\r\n          <h1 className=\"display-1 text-light\">Create your TODO list</h1>\r\n          <Link to={ROUTES.SIGN_IN}>\r\n            <button type=\"button\" className=\"btn btn-outline-light btn-lg\">Get start</button>\r\n          </Link>\r\n        </div>       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;","\r\nexport const getIsSignedIn = (state) => state.auth.isSignedIn;\r\n\r\nexport const getNoteList = (state) => state.noteList.noteList;\r\n\r\nexport const getNoteIds = (state) => Object.keys(getNoteList(state));\r\nexport const getNoteById = (state, id) => getNoteList(state)[id];\r\n\r\nexport const getCheckItemById = (state, noteId, id) => getNoteById(state, noteId).checkList[id];","import React, { Component, Fragment } from 'react';\r\nimport './CheckItem.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getCheckItemById } from '../../redux/selectors';\r\nimport { changeCompleteState, editCheckItem } from '../../redux/actions/noteList';\r\n\r\nclass CheckItem extends Component {\r\n  handleEditCheckItemIsComplete = (event) => {\r\n    const { checked } = event.target;\r\n    this.props.editCheckItem({ noteId: this.props.noteId, checkItemId: this.props.id, name: 'isComplete', value: checked });\r\n  }\r\n\r\n  handleEditCheckItemContent = (event) => {\r\n    const { value } = event.target;\r\n    this.props.editCheckItem({ noteId: this.props.noteId, checkItemId: this.props.id, name: 'content', value: value });\r\n  }\r\n\r\n  render() {\r\n    const { noteId, id, isEdit, checkItem } = this.props;\r\n    return (\r\n      <div className=\"custom-control custom-checkbox mr-sm-2 mt-2\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isComplete\"\r\n          className=\"custom-control-input\"\r\n          id={id + noteId}\r\n          defaultChecked={checkItem.isComplete ? true : false}\r\n          onChange={isEdit\r\n            ? this.handleEditCheckItemIsComplete\r\n            : () => this.props.changeCompleteState({ noteId: noteId, checkItemId: id, isComplete: checkItem.isComplete })\r\n          }\r\n        />       \r\n        <label className=\"custom-control-label strike-through\" htmlFor={id + noteId}>\r\n          {isEdit\r\n            ? <input \r\n              type=\"text\"\r\n              name=\"content\"\r\n              className=\"form-control\"\r\n              id={id + noteId}\r\n              defaultValue={checkItem.content}\r\n              onChange={this.handleEditCheckItemContent}\r\n            />\r\n            : <Fragment>\r\n                {checkItem.content}\r\n              </Fragment>         \r\n          }           \r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { noteId, id } = ownProps;\r\n  return {\r\n    checkItem: getCheckItemById(state, noteId, id)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeCompleteState: (payload) => dispatch(changeCompleteState(payload)),\r\n    editCheckItem: (payload) => dispatch(editCheckItem(payload))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckItem);","import {\r\n  GET_NOTE_LIST_PENDING,\r\n  GET_NOTE_LIST_SUCCESS,\r\n  CHANGE_COMPLETE_STATE,\r\n  DELETE_NOTE,\r\n  EDIT_NOTE,\r\n  EDIT_CHECK_ITEM,\r\n  UPDATE_NOTE\r\n} from '../../constants/action-types';\r\nimport { database, firebaseAuth } from '../../firebase/firebase';\r\n\r\nexport const getNoteList = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: GET_NOTE_LIST_PENDING });\r\n    database.ref('noteData/' + firebaseAuth.currentUser.uid).on('value', (data) => {\r\n      dispatch({ type: GET_NOTE_LIST_SUCCESS, noteList: data.val() })\r\n    });\r\n  }\r\n};\r\n\r\nexport const changeCompleteState = (payload) => {\r\n  return (dispatch) => {\r\n    database.ref('noteData/' + firebaseAuth.currentUser.uid + '/' + payload.noteId + '/checkList/' + payload.checkItemId)\r\n      .update({ isComplete: !payload.isComplete })\r\n      .then(() => dispatch({ type: CHANGE_COMPLETE_STATE }));\r\n  }\r\n};\r\n\r\nexport const deleteNote = (noteId) => {\r\n  return (dispatch) => {\r\n    database.ref('noteData/' + firebaseAuth.currentUser.uid + '/' + noteId + '/')\r\n      .remove()\r\n      .then(() => dispatch({ type: DELETE_NOTE }));\r\n  }\r\n};\r\n\r\nexport const editNote = (payload) => ({\r\n  type: EDIT_NOTE,\r\n  payload\r\n});\r\n\r\nexport const editCheckItem = (payload) => ({\r\n  type: EDIT_CHECK_ITEM,\r\n  payload\r\n});\r\n\r\nexport const updateNote = (payload) => {\r\n  return (dispatch) => {\r\n    database.ref('noteData/' + firebaseAuth.currentUser.uid + '/' + payload.noteId)\r\n      .update(payload.note)\r\n      .then(() => dispatch({ type: UPDATE_NOTE }));\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport CheckItem from './CheckItem';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteNote, editNote, updateNote } from '../../redux/actions/noteList';\r\nimport { notifyOn } from '../../redux/actions/notify';\r\nimport { getNoteById } from '../../redux/selectors';\r\n\r\nexport class Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false\r\n    }\r\n  }\r\n\r\n  handleDeleteNote = () => {\r\n    this.props.deleteNote(this.props.id);\r\n    this.props.notifyOn(\"Delete note successfully\");\r\n  }\r\n\r\n  handleEditNote = (event) => {\r\n    const { name, value } = event.target;\r\n    this.props.editNote({ noteId: this.props.id, name: name, value: value });\r\n  }\r\n\r\n  handleUpdateNote = () => {\r\n    this.props.updateNote({ noteId: this.props.id, note: this.props.note });\r\n    this.props.notifyOn(\"Edit note successfully\");\r\n    this.setState({ isEdit: !this.state.isEdit });\r\n  }\r\n  \r\n  render() {\r\n    const { isEdit } = this.state;\r\n    const { id, note } = this.props;\r\n    const checkList = note.hasOwnProperty('checkList') ? Object.keys(note.checkList) : [];\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header py-2\" role=\"tab\">\r\n          <h5 className=\"mt-1 float-left\">\r\n            {isEdit\r\n              ? <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  className=\"form-control text-warning\"\r\n                  defaultValue={note.title}\r\n                  onChange={this.handleEditNote}\r\n                />\r\n              : <a className=\"text-decoration-none text-warning\" data-toggle=\"collapse\" data-parent=\"#noteList\" href={'#' + id} aria-expanded=\"true\">\r\n                  {note.title}              \r\n                </a>\r\n            }            \r\n          </h5>\r\n          <button className=\"btn btn-danger float-right\" onClick={this.handleDeleteNote}><i className=\"fa fa-trash\"/></button>\r\n        </div>\r\n        <div id={id} className=\"collapse in\" role=\"tabpanel\">\r\n          <div className=\"card-body\">\r\n            {isEdit\r\n              ? <textarea \r\n                  type=\"text\"\r\n                  name=\"content\"\r\n                  className=\"form-control\"\r\n                  defaultValue={note.content}\r\n                  onChange={this.handleEditNote}\r\n                />\r\n              : <p>{note.content}</p>\r\n            }\r\n                        \r\n            {checkList.map((checkItemId) => <CheckItem noteId={id} id={checkItemId} isEdit={isEdit} key={checkItemId} />)}\r\n\r\n            {isEdit\r\n              ? <button className=\"btn btn-success mt-2\" onClick={this.handleUpdateNote}>\r\n                  <i className=\"fa fa-save\" /> Save\r\n                </button>\r\n              : <button className=\"btn btn-warning mt-2\" onClick={() => this.setState({ isEdit: !this.state.isEdit })}>\r\n                  <i className=\"fa fa-edit\" /> Edit\r\n                </button>\r\n            }            \r\n          </div>         \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { id } = ownProps;\r\n  return {\r\n    note: getNoteById(state, id)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteNote: (noteId) => dispatch(deleteNote(noteId)),\r\n    editNote: (payload) => dispatch(editNote(payload)),\r\n    updateNote: (payload) => dispatch(updateNote(payload)),\r\n    notifyOn: (content) => dispatch(notifyOn(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);\r\n","import React, { Component } from 'react';\r\nimport Note from './Note';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getNoteList } from '../../redux/actions/noteList';\r\nimport { getNoteIds } from '../../redux/selectors';\r\n\r\nclass NoteList extends Component {  \r\n  componentDidMount() {\r\n    this.props.getNoteList();\r\n  }\r\n    \r\n  render() { \r\n    \r\n    return (\r\n      <div className=\"col\">\r\n        <div id=\"noteList\" role=\"tablist\" aria-multiselectable=\"true\">\r\n          {this.props.noteList.map((noteId, key) => <Note id={noteId} key={key} />)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    noteList: getNoteIds(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getNoteList: () => dispatch(getNoteList())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","import {\r\n  ADD_CHECK_ITEM,\r\n  ADD_NOTE_SUCCESS,\r\n  UPDATE_NOTE_FORM\r\n} from '../../constants/action-types';\r\nimport { database, firebaseAuth } from '../../firebase/firebase';\r\n\r\nexport const updateNoteForm = (payload) => ({\r\n  type: UPDATE_NOTE_FORM,\r\n  payload\r\n});\r\n\r\nexport const addCheckItem = (checkItem) => ({\r\n  type: ADD_CHECK_ITEM,\r\n  checkItem\r\n});\r\n\r\nexport const addNote = (note) => {\r\n  return (dispatch) => {\r\n    database.ref('noteData/' + firebaseAuth.currentUser.uid).push(note)\r\n      .then(() => dispatch({ type: ADD_NOTE_SUCCESS }))\r\n      .catch(error => console.log(error));\r\n  }\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './CheckItem.css';\r\nimport { connect } from 'react-redux';\r\nimport { addCheckItem } from '../../redux/actions/addNoteForm';\r\n\r\nclass CheckItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isComplete: false\r\n    }\r\n  }\r\n\r\n  changeCompleteStatus = () => {\r\n    const { content } = this.props;\r\n    if (typeof(content) === 'undefined' || content === '') {\r\n      this.props.addCheckItem({ [this.props.id]: {} });\r\n    } else {\r\n      this.props.addCheckItem({ [this.props.id]: { content: content, isComplete: !this.state.isComplete } })\r\n    }    \r\n    this.setState({ isComplete: !this.state.isComplete });\r\n  }\r\n\r\n  handleAddCheckItem = (event) => {\r\n    if (event.target.value === '') {\r\n      this.props.addCheckItem({ [this.props.id]: {} });\r\n    } else {\r\n      this.props.addCheckItem({ [this.props.id]: { ...this.state, content: event.target.value } })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, content } = this.props;\r\n    return (\r\n      <div className=\"input-group mb-1\">\r\n        <div className=\"input-group-prepend\">\r\n          <div className=\"input-group-text\">\r\n            <input type=\"checkbox\" onChange={this.changeCompleteStatus} />\r\n          </div>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className={this.state.isComplete ? \"form-control strike-through-add-note-form\" : \"form-control\"}\r\n          id={id}\r\n          defaultValue={content}\r\n          onChange={this.handleAddCheckItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addCheckItem: (checkItem) => dispatch(addCheckItem(checkItem))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckItem);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateNoteForm, addCheckItem, addNote } from '../../redux/actions/addNoteForm';\r\nimport { notifyOn } from '../../redux/actions/notify';\r\n\r\nimport CheckItem from './CheckItem';\r\n\r\nclass AddNoteForm extends Component {\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.props.updateNoteForm({ name: name, value: value });\r\n  }\r\n\r\n  handleAddNote = (checkList) => {\r\n    const { title, content } = this.props;\r\n    let note = {\r\n      title: title,\r\n      content: content,\r\n      checkList: { ...this.props.checkList }\r\n    }\r\n\r\n    if (title === '' && content === '') {\r\n      for (let value of checkList) {\r\n        if (Object.keys(value.checkItem).length) {\r\n          note.title = value.checkItem.content;\r\n          break;\r\n        }\r\n      }\r\n    } else if (title === '') {\r\n      note.title = content;\r\n    }\r\n\r\n    this.props.addNote(note);\r\n    this.props.notifyOn(\"Add note successfully\")\r\n  }\r\n\r\n  isCheckListEmpty = (checkList) => {\r\n    return !checkList.some(value => Object.keys(value.checkItem).length);\r\n  }\r\n\r\n  render() {\r\n    const { title, content } = this.props;\r\n    const checkList = Object.entries(this.props.checkList).map(value => ({ id: value[0], checkItem: value[1] })); //convert object to array   \r\n    return (\r\n      <form className=\"col-3\">\r\n        <div className=\"card border-success position-fixed\">\r\n          <div className=\"card-header text-center\">Add note</div>\r\n          <div className=\"card-body text-success\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input \r\n                type=\"text\" \r\n                name=\"title\"  \r\n                className=\"form-control\" \r\n                placeholder=\"Enter title\" \r\n                onChange={this.handleChange} \r\n              />\r\n              <label className=\"mt-3\" htmlFor=\"content\">Content</label>\r\n              <textarea type=\"text\" \r\n                name=\"content\"  \r\n                className=\"form-control\" \r\n                placeholder=\"Enter content\" \r\n                onChange={this.handleChange} \r\n              />\r\n              <label className=\"mt-3\" htmlFor=\"noteChecklist\">Checklist</label>\r\n              <button type=\"button\" className=\"btn btn-light btn-sm ml-2 mb-2\" onClick={() => this.props.addCheckItem({ [checkList.length]: {} })}>\r\n                <i className=\"fa fa-plus-square\" />\r\n              </button>\r\n              {checkList.map((value, key) => <CheckItem id={value.id} content={value.checkItem.content} key={key} />)}\r\n            </div>\r\n            <input \r\n              type=\"reset\"\r\n              className=\"btn btn-success btn-block\" \r\n              onClick={() => this.handleAddNote(checkList)} \r\n              value=\"Add\"\r\n              disabled={(title === '' && content === '' && this.isCheckListEmpty(checkList)) ? true : false}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    title: state.addNoteForm.title,\r\n    content: state.addNoteForm.content,\r\n    checkList: state.addNoteForm.checkList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNoteForm: (payload) => dispatch(updateNoteForm(payload)),\r\n    addNote: (note) => dispatch(addNote(note)),\r\n    addCheckItem: (checkItem) => dispatch(addCheckItem(checkItem)),\r\n    notifyOn: (content) => dispatch(notifyOn(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNoteForm);","import React, { Component } from 'react';\r\nimport './HomePage.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport NoteList from '../NoteList/NoteList';\r\nimport AddNoteForm from '../AddNoteForm/AddNoteForm';\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    if (!this.props.authenticated) return <Redirect to={ROUTES.SIGN_IN} />\r\n\r\n    return (\r\n      <div className=\"container mt-4 text-left\">\r\n        <div className=\"row\">\r\n          <NoteList />\r\n          <AddNoteForm />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.auth.authenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(HomePage);","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../redux/actions/auth';\r\n\r\nclass SignInPage extends Component {\r\n  render() {\r\n    if (this.props.authenticated) return <Redirect to={ROUTES.HOME} />\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        onSubmit={values => {\r\n          this.props.signIn({ email: values.email, password: values.password });\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string()\r\n            .email('Invalid email address')\r\n            .required('Required'),\r\n          password: Yup.string()\r\n            .required('Required')\r\n            .min(6, 'Password must be at least 6 characters')\r\n        })}\r\n      >\r\n        {(props) => {\r\n          const { touched, errors, handleChange, handleBlur, handleSubmit } = props;\r\n          return (\r\n            <form className=\"card bg-transparent text-dark mx-auto\" style={{ maxWidth: '18rem', top: '120px' }} onSubmit={handleSubmit}>\r\n              <div className=\"card-header text-center\">Sign In</div>\r\n              <div className=\"card-body text-left\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"                   \r\n                    className={(errors.email && touched.email) ? \"form-control border border-danger\" : \"form-control\"}\r\n                    placeholder=\"Enter email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.email && touched.email\r\n                    ? <small className=\"text-danger\">{errors.email}</small>\r\n                    : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"mt-2\" htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className={(errors.password && touched.password) ? \"form-control border border-danger\" : \"form-control\"}\r\n                    placeholder=\"Enter password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.password && touched.password\r\n                    ? <small className=\"text-danger\">{errors.password}</small>\r\n                    : null\r\n                  }\r\n                </div>\r\n                {this.props.error\r\n                  ? <small className=\"text-danger\">Incorrect email or password</small>\r\n                  : null\r\n                }\r\n                <input\r\n                  className=\"btn btn-dark btn-block mt-3\"\r\n                  type=\"submit\"\r\n                  value=\"Sign in\"\r\n                  disabled={errors.password || errors.email}\r\n                />\r\n                <p className=\"mt-2\">\r\n                  Don't have an account?\r\n                  <Link to={ROUTES.SIGN_UP} className=\"text-decoration-none\">  Sign up</Link>\r\n                </p>                \r\n              </div>\r\n            </form>\r\n          )\r\n        }}\r\n      </Formik>      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.auth.authenticated,\r\n    error: state.auth.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (user) => dispatch(signIn(user))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPage);","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../redux/actions/auth';\r\n\r\nclass SignUpPage extends Component {\r\n  render() {\r\n    if (this.props.authenticated) return <Redirect to={ROUTES.HOME} />\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{ email: '', password: '', confirmPassword: '' }}\r\n        onSubmit={values => {\r\n          this.props.signUp({ email: values.email, password: values.password });\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string()\r\n            .email('Invalid email address')\r\n            .required('Required'),\r\n          password: Yup.string()\r\n            .required('Required')\r\n            .min(6, 'Password must be at least 6 characters'),\r\n          confirmPassword: Yup.string()\r\n            .required('Required')\r\n            .min(6, 'Password must be at least 6 characters')\r\n            .test('Passwords match', 'Confirm Password & Password must be same', function (value) {\r\n              return this.parent.password === value;\r\n            })\r\n        })}\r\n      >\r\n        {(props) => {\r\n          const { touched, errors, handleChange, handleBlur, handleSubmit } = props;\r\n          return (\r\n            <form className=\"card bg-transparent text-dark mx-auto\" style={{ maxWidth: '18rem', top: '120px' }} onSubmit={handleSubmit}>\r\n              <div className=\"card-header text-center\">Sign Up</div>\r\n              <div className=\"card-body text-left\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    className={(errors.email && touched.email) ? \"form-control border border-danger\" : \"form-control\"}\r\n                    placeholder=\"Enter email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.email && touched.email\r\n                    ? <small className=\"text-danger\">{errors.email}</small>\r\n                    : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"mt-2\" htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className={(errors.password && touched.password) ? \"form-control border border-danger\" : \"form-control\"}\r\n                    placeholder=\"Enter password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.password && touched.password\r\n                    ? <small className=\"text-danger\">{errors.password}</small>\r\n                    : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"mt-2\" htmlFor=\"password\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    className={(errors.confirmPassword && touched.confirmPassword) ? \"form-control border border-danger\" : \"form-control\"}\r\n                    placeholder=\"Confirm password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />             \r\n                  {errors.confirmPassword && touched.confirmPassword\r\n                    ? <small className=\"text-danger\">{errors.confirmPassword}</small>\r\n                    : null\r\n                  }\r\n                </div>\r\n                {this.props.error\r\n                  ? <small className=\"text-danger\">Email has already exists</small>\r\n                  : null\r\n                }\r\n                <input\r\n                  className=\"btn btn-dark btn-block mt-3\"\r\n                  type=\"submit\"\r\n                  value=\"Sign up\"\r\n                  disabled={errors.password || errors.email || errors.confirmPassword}                />\r\n                <p className=\"mt-2\">\r\n                  Already have an account?\r\n                  <Link to={ROUTES.SIGN_IN} className=\"text-decoration-none\">  Sign in</Link>\r\n                </p> \r\n              </div>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.auth.authenticated,\r\n    error: state.auth.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (user) => dispatch(signUp(user))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPage);","import React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nimport Navigation from '../Navigation/Navigation';\nimport Notify from '../Notify/Notify';\nimport LandingPage from '../LandingPage/LandingPage';\nimport HomePage from '../HomePage/HomePage';\nimport SignInPage from '../SignInPage/SignInPage';\nimport SignUpPage from '../SignUpPage/SignUpPage';\n\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 180,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 868.1035095057337\n      }\n    },\n    \"color\": {\n      \"value\": \"#ffffff\"\n    },\n    \"shape\": {\n      \"type\": \"circle\",\n      \"stroke\": {\n        \"width\": 0,\n        \"color\": \"#000000\"\n      },\n      \"polygon\": {\n        \"nb_sides\": 4\n      },\n      \"image\": {\n        \"src\": \"img/github.svg\",\n        \"width\": 100,\n        \"height\": 100\n      }\n    },\n    \"opacity\": {\n      \"value\": 0.5,\n      \"random\": false,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 1,\n        \"opacity_min\": 0.1,\n        \"sync\": false\n      }\n    },\n    \"size\": {\n      \"value\": 3,\n      \"random\": true,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 40,\n        \"size_min\": 0.1,\n        \"sync\": false\n      }\n    },\n    \"line_linked\": {\n      \"enable\": true,\n      \"distance\": 150,\n      \"color\": \"#ffffff\",\n      \"opacity\": 0.4,\n      \"width\": 1\n    },\n    \"move\": {\n      \"enable\": true,\n      \"speed\": 6,\n      \"direction\": \"none\",\n      \"random\": false,\n      \"straight\": false,\n      \"out_mode\": \"out\",\n      \"bounce\": false,\n      \"attract\": {\n        \"enable\": false,\n        \"rotateX\": 600,\n        \"rotateY\": 1200\n      }\n    }\n  },\n  \"interactivity\": {\n    \"detect_on\": \"canvas\",\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      },\n      \"onclick\": {\n        \"enable\": true,\n        \"mode\": \"push\"\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"grab\": {\n        \"distance\": 400,\n        \"line_linked\": {\n          \"opacity\": 1\n        }\n      },\n      \"bubble\": {\n        \"distance\": 400,\n        \"size\": 40,\n        \"duration\": 2,\n        \"opacity\": 8,\n        \"speed\": 3\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.4\n      },\n      \"push\": {\n        \"particles_nb\": 4\n      },\n      \"remove\": {\n        \"particles_nb\": 2\n      }\n    }\n  },\n  \"retina_detect\": true\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>        \n        <div className=\"App\">\n          <Particles className=\"particles\" params={particlesOptions} />\n          <Navigation />\n          <Notify />\n          <Switch>\n            <Route exact path={ROUTES.LANDING} component={LandingPage} />\n            <Route path={ROUTES.HOME} component={HomePage} />\n            <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          </Switch>          \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  ADD_CHECK_ITEM,\r\n  ADD_NOTE_SUCCESS,\r\n  UPDATE_NOTE_FORM\r\n} from '../../constants/action-types';\r\n\r\nconst initialState = {\r\n  title: '',\r\n  content: '',\r\n  checkList: {}\r\n}\r\n\r\nexport const addNoteForm = (state = initialState, action = {}) => {\r\n  switch (action.type) {   \r\n    case UPDATE_NOTE_FORM:\r\n      return { ...state, [action.payload.name]: action.payload.value }\r\n    \r\n    case ADD_CHECK_ITEM:\r\n      return { ...state, checkList: { ...state.checkList, ...action.checkItem } }\r\n\r\n    case ADD_NOTE_SUCCESS:\r\n      return initialState;\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  GET_NOTE_LIST_PENDING,\r\n  GET_NOTE_LIST_SUCCESS,\r\n  CHANGE_COMPLETE_STATE,\r\n  DELETE_NOTE,\r\n  EDIT_NOTE,\r\n  EDIT_CHECK_ITEM,\r\n  UPDATE_NOTE\r\n} from '../../constants/action-types';\r\n\r\nconst initialState = {\r\n  isPending: false,\r\n  noteList: {}\r\n}\r\n\r\nexport const noteList = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case GET_NOTE_LIST_PENDING:\r\n      return { ...state, isPending: true }\r\n\r\n    case GET_NOTE_LIST_SUCCESS:\r\n      return { ...state, noteList: { ...action.noteList }, isPending: false }\r\n\r\n    case CHANGE_COMPLETE_STATE:\r\n      return state;\r\n\r\n    case DELETE_NOTE:\r\n      return state;\r\n\r\n    case EDIT_NOTE:\r\n      const noteList = state.noteList;\r\n      const noteId = state.noteList[action.payload.noteId];\r\n      return { \r\n        ...state, \r\n        noteList: {\r\n          ...noteList,\r\n          [action.payload.noteId]: {\r\n            ...noteId,\r\n            [action.payload.name]: action.payload.value\r\n          }\r\n        }\r\n      }\r\n\r\n    case EDIT_CHECK_ITEM:\r\n      const noteList2 = state.noteList; //doi ten vi trung ten voi case EDIT_NOTE\r\n      const noteId2 = state.noteList[action.payload.noteId]; //doi ten vi trung ten voi case EDIT_NOTE\r\n      const checkList = state.noteList[action.payload.noteId].checkList;\r\n      const checkItemId = state.noteList[action.payload.noteId].checkList[action.payload.checkItemId];\r\n      return {\r\n        ...state,\r\n        noteList: {\r\n          ...noteList2,\r\n          [action.payload.noteId]: {\r\n            ...noteId2,\r\n            checkList: {\r\n              ...checkList,\r\n              [action.payload.checkItemId]: {\r\n                ...checkItemId,\r\n                [action.payload.name]: action.payload.value\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    case UPDATE_NOTE:\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  AUTH_SUCCESS,\r\n  AUTH_ERROR,\r\n  SIGN_OUT\r\n} from '../../constants/action-types';\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  error: false\r\n}\r\n\r\nexport const auth = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return { ...state, authenticated: true, error: false }\r\n\r\n    case AUTH_ERROR:\r\n      return { ...state, error: true }\r\n\r\n    case SIGN_OUT:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  NOTIFY_ON,\r\n  NOTIFY_OFF\r\n} from '../../constants/action-types';\r\n\r\nconst initialState = {\r\n  isShow: false,\r\n  content: ''\r\n}\r\n\r\nexport const notify = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case NOTIFY_ON:\r\n      return { ...state, isShow: true, content: action.content }\r\n\r\n    case NOTIFY_OFF:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { addNoteForm } from '../reducers/addNoteForm';\r\nimport { noteList } from '../reducers/noteList';\r\nimport { auth } from '../reducers/auth';\r\nimport { notify } from '../reducers/notify';\r\n\r\nexport const rootReducer = combineReducers({ addNoteForm, noteList, auth, notify });","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './reducers/rootReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n// import { createLogger } from 'redux-logger';\r\nimport { verifyAuth } from './actions/auth';\r\n\r\n// const logger = createLogger();\r\n// const store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n// store.subscribe(() => {\r\n//   console.log(store.getState().noteList.noteList);\r\n// });\r\n\r\nstore.dispatch(verifyAuth());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}